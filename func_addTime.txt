function dateAdd(original, increment, unit) {

	// Return undefiend if first argument isn't a Date object
	if (!(original instanceof Date)) {
		return(undefined);
	}

	switch(unit) {
		case 'seconds':
			// Add number of secodns to current date (ms*1000)
			var newDate = new Date(original);
			newDate.setTime(original.getTime() + (increment*1000));
			return newDate;
			break;
		case 'minutes':
			// Add number of minutes to current date (ms*1000*60)
			var newDate = new Date(original);
			newDate.setTime(original.getTime() + (increment*1000*60));
			return newDate;
			break;
		case 'hours':
			// Add number of hours to current date (ms*1000*60*60)
			var newDate = new Date(original);
			newDate.setTime(original.getTime() + (increment*1000*60*60));
			return newDate;
			break;
		case 'days':
			// Add number of days to current date
			var newDate = new Date(original);
			newDate.setDate(original.getDate() + increment);
			return newDate;
			break;
		case 'weeks':
			// Add number of weeks to current date
			var newDate = new Date(original);
			newDate.setDate(original.getDate() + (increment*7));
			return newDate;
			break;
		case 'months':
			// Get current date
			var oldDate = original.getDate();

			// Increment months (handles year rollover)
			var newDate = new Date(original);
			newDate.setMonth(original.getMonth() + increment);
			
			// If new day and old day aren't equal, set new day to last day of last month
			// (handles edge case when adding month to Jan 31st for example. Now goes to Feb 28th)
			if (newDate.getDate() != oldDate) {
				newDate.setDate(0);
			}

			// Handle leap years
			// If old date was Feb 29 (leap year) and new year isn't leap year, set new date to Feb 28
			if (original.getDate() == 29 && !isLeapYear(newDate.getFullYear())) {
				newDate.setMonth(1);
				newDate.setDate(28);
			}
			
			return newDate;
			break;
		case 'years':
			// Increment years
			var newDate = new Date(original);
			newDate.setFullYear(original.getFullYear() + increment);
			
			// Handle leap years
			// If old date was Feb 29 (leap year) and new year isn't leap year, set new date to Feb 28
			if (original.getDate() == 29 && !isLeapYear(newDate.getFullYear())) {
				newDate.setMonth(1);
				newDate.setDate(28);
			}
			
			return newDate;
			break;
		// Defaults to milliseconds
		default:
			var newDate = new Date(original);
			newDate.setTime(original.getTime() + increment);
			return newDate;
	}	
};